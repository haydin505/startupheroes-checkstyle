<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<module name="Checker">

   <property name="charset" value="UTF-8"/>

   <property name="severity" value="warning"/>

   <property name="fileExtensions" value="java, properties, xml"/>

   <!-- Checks that property files contain the same keys.         -->
   <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
   <module name="Translation"/>

   <!-- Checks for Size Violations.                    -->
   <!-- See http://checkstyle.sf.net/config_sizes.html -->
   <module name="FileLength">
      <property name="max" value="1500"/>
   </module>

   <!-- Checks for whitespace                               -->
   <!-- See http://checkstyle.sf.net/config_whitespace.html -->
   <module name="FileTabCharacter">
      <property name="eachLine" value="true"/>
   </module>

   <!-- Miscellaneous other checks.                   -->
   <!-- See http://checkstyle.sf.net/config_misc.html -->
   <module name="RegexpSingleline">
      <property name="format" value="\s+$"/>
      <property name="minimum" value="0"/>
      <property name="maximum" value="0"/>
      <property name="message" value="Line has trailing spaces."/>
   </module>

   <!-- Space after 'for' and 'if' -->
   <module name="RegexpSingleline">
      <property name="format" value="^\s*(for|if)\b[^ ]"/>
      <property name="message" value="Space needed before opening parenthesis."/>
   </module>

   <!-- For each spacing -->
   <module name="RegexpSingleline">
      <property name="format" value="^\s*for \(.*?([^ ]:|:[^ ])"/>
      <property name="message" value="Space needed around ':' character."/>
   </module>

   <module name="TreeWalker">

      <!-- Checks for Naming Conventions.                  -->
      <!-- See http://checkstyle.sf.net/config_naming.html -->
      <module name="ConstantName"/>
      <module name="LocalFinalVariableName"/>
      <module name="LocalVariableName"/>
      <module name="CatchParameterName"/>
      <module name="MemberName"/>
      <module name="MethodName"/>
      <module name="PackageName"/>
      <module name="ParameterName"/>
      <module name="StaticVariableName"/>
      <module name="TypeName"/>
      <module name="ClassTypeParameterName"/>
      <module name="MethodTypeParameterName"/>
      <module name="InterfaceTypeParameterName"/>

      <!-- Checks for imports                              -->
      <!-- See http://checkstyle.sf.net/config_import.html -->
      <module name="AvoidStarImport"/>
      <module name="IllegalImport"/>
      <module name="RedundantImport"/>
      <module name="UnusedImports"/>

      <!-- Checks for Size Violations.                    -->
      <!-- See http://checkstyle.sf.net/config_sizes.html -->
      <module name="LineLength">
         <property name="max" value="200"/>
         <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
      </module>
      <module name="MethodLength">
         <property name="max" value="200"/>
      </module>

      <!-- Checks for whitespace                               -->
      <!-- See http://checkstyle.sf.net/config_whitespace.html -->
      <module name="EmptyForIteratorPad"/>
      <module name="GenericWhitespace"/>
      <module name="MethodParamPad"/>
      <module name="NoWhitespaceAfter"/>
      <module name="NoWhitespaceBefore"/>
      <module name="ParenPad"/>
      <module name="TypecastParenPad"/>
      <module name="WhitespaceAfter"/>
      <module name="WhitespaceAround"/>

      <!-- Modifier Checks                                    -->
      <!-- See http://checkstyle.sf.net/config_modifiers.html -->
      <module name="ModifierOrder"/>
      <module name="RedundantModifier"/>

      <!-- Checks for blocks. You know, those {}'s         -->
      <!-- See http://checkstyle.sf.net/config_blocks.html -->
      <module name="AvoidNestedBlocks"/>
      <module name="EmptyBlock"/>
      <module name="LeftCurly"/>
      <module name="NeedBraces"/>
      <module name="RightCurly"/>

      <!-- Checks for common coding problems               -->
      <!-- See http://checkstyle.sf.net/config_coding.html -->
      <module name="EmptyStatement"/>
      <module name="EqualsAvoidNull"/>
      <module name="EqualsHashCode"/>
      <module name="IllegalInstantiation"/>
      <module name="MagicNumber"/>
      <module name="MissingSwitchDefault"/>
      <module name="DefaultComesLast"/>
      <module name="SimplifyBooleanExpression"/>
      <module name="SimplifyBooleanReturn"/>

      <!-- Checks for class design                         -->
      <!-- See http://checkstyle.sf.net/config_design.html -->
      <module name="FinalClass"/>
      <module name="HideUtilityClassConstructor"/>
      <module name="InterfaceIsType"/>
      <module name="VisibilityModifier"/>

      <!-- Miscellaneous other checks.                   -->
      <!-- See http://checkstyle.sf.net/config_misc.html -->
      <module name="OuterTypeFilename"/>
      <module name="IllegalTokenText">
         <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
         <property name="format" value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
         <property name="message" value="Avoid using corresponding octal or Unicode escape."/>
      </module>
      <module name="AvoidEscapedUnicodeCharacters">
         <property name="allowEscapesForControlCharacters" value="true"/>
         <property name="allowByTailComment" value="true"/>
         <property name="allowNonPrintableEscapes" value="true"/>
      </module>
      <module name="OneTopLevelClass"/>
      <module name="NoLineWrap"/>
      <module name="OneStatementPerLine"/>
      <module name="MultipleVariableDeclarations"/>
      <module name="ArrayTypeStyle"/>
      <module name="FallThrough"/>
      <module name="UpperEll"/>
      <module name="EmptyLineSeparator">
         <property name="allowNoEmptyLineBetweenFields" value="true"/>
      </module>
      <module name="SeparatorWrap">
         <property name="tokens" value="DOT"/>
         <property name="option" value="nl"/>
      </module>
      <module name="SeparatorWrap">
         <property name="tokens" value="COMMA"/>
         <property name="option" value="EOL"/>
      </module>

      <module name="NoFinalizer"/>
      <module name="AbbreviationAsWordInName">
         <property name="ignoreFinal" value="false"/>
         <property name="allowedAbbreviationLength" value="1"/>
      </module>
      <module name="AnnotationLocation">
         <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
      </module>
      <module name="AnnotationLocation">
         <property name="tokens" value="VARIABLE_DEF"/>
         <property name="allowSamelineMultipleAnnotations" value="true"/>
      </module>
      <module name="EmptyCatchBlock">
         <property name="exceptionVariableName" value="expected"/>
      </module>
      <module name="CommentsIndentation"/>
      <module name="DeclarationOrder"/>
      <module name="ExplicitInitialization"/>
      <module name="PackageDeclaration"/>

      <!-- Custom Checks-->
      <module name="startupheroes.checkstyle.checks.LoggerOrderCheck"/>
      <module name="startupheroes.checkstyle.checks.RedundantMultipleAnnotationCheck">
         <property name="tokens" value="VARIABLE_DEF"/>
         <property name="redundantAnnotationPairs" value="javax.persistence.Id:javax.persistence.Column"/>
      </module>
      <module name="startupheroes.checkstyle.checks.BlockedAnnotationKeyCheck">
         <property name="annotationBlockedKeyMap" value="javax.persistence.Column:unique"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityEqualsHashCodeCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityToStringCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityGettersSettersCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityMandatoryVariableCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
         <property name="mandatoryVariables" value="createdAt, lastUpdatedAt"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityVariableAnnotationKeyValueCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
         <property name="variableAnnotationKeyValueTable"
             value="createdAt:javax.persistence.Column:nullable:false, lastUpdatedAt:javax.persistence.Column:nullable:false"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityGeneratedPrimaryKeyNameCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
         <property name="idAnnotation" value="javax.persistence.Id"/>
         <property name="generatedValueAnnotation" value="javax.persistence.GeneratedValue"/>
         <property name="suggestedGeneratedPrimaryKeyName" value="id"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityVariableNameCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
      </module>
      <module name="startupheroes.checkstyle.checks.BlockedClassAnnotationCheck">
         <property name="blockedAnnotations" value="com.clovify.lyso.core.annotation.LysoRepository"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityIndexNameCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
         <property name="tableAnnotation" value="javax.persistence.Table"/>
         <property name="indexAnnotation" value="javax.persistence.Index"/>
         <property name="key" value="indexes"/>
         <property name="keyName" value="name"/>
         <property name="keyColumns" value="columnList"/>
         <property name="suggestedSuffix" value="index"/>
         <property name="maxLength" value="64"/>
         <property name="regex" value="^[a-z0-9_]*$"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityUniqueConstraintNameCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
         <property name="tableAnnotation" value="javax.persistence.Table"/>
         <property name="uniqueConstraintAnnotation" value="javax.persistence.UniqueConstraint"/>
         <property name="key" value="uniqueConstraints"/>
         <property name="keyName" value="name"/>
         <property name="keyColumns" value="columnNames"/>
         <property name="suggestedSuffix" value="uk"/>
         <property name="maxLength" value="64"/>
         <property name="regex" value="^[a-z0-9_]*$"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EntityLogDataCheck">
         <property name="entityAnnotation" value="javax.persistence.Entity"/>
         <property name="columnAnnotation" value="javax.persistence.Column"/>
         <property name="limitLength" value="255"/>
      </module>
      <module name="startupheroes.checkstyle.checks.EmptyLineCheck"/>

   </module>
</module>
